- decorator @  

- property binding : [src]="imagePath()"  : ដាក់ក្នុង គ្នាប []
- event binding : <button (click)="onSelectUser" >​ ដាក់ក្នុង រង្វង់ក្រចក ()
- {{ selectdUser().name }} String interpolation : {{}} យើងយកអាញាតមកប្រើនៅក្នុង HTML​ ដាក់ក្នុង {}


In the TS : 

We use decorator @ + variable

Example: @Input() avatar !: string; ( we get the input from outside and type is string ) ! mean we know it is from outside input. 

and avatar is call property. 

===========================================================

Gold : យើងចង់បានអោយវាបង្ហាញជា List of user មួយៗ​ ចឹងយើងត្រូវដាក់វាធ្វើម្តេចអោយអាច select user បាន​

1. HTML in app.component.html 

<app-header/>
<main>
  <ul id="users">
    <li>
      <app-user [avatar]="users[0].avatar" [name]="users[0].name"/>
    </li>
    <li>
      <app-user [avatar]="users[1].avatar" [name]="users[1].name"/>
    </li>
    <li>
      <app-user [avatar]="users[2].avatar" [name]="users[2].name"/>
    </li>
    <li>
      <app-user [avatar]="users[3].avatar" [name]="users[3].name"/>
    </li>
  </ul>
</main>

Explain : 

- [avatar]="users[0].avatar" ហៅថា property binding and avatar is the input 
- <app-user [avatar]="users[0].avatar" [name]="users[0].name"/> it called custom attribute 

2. TS app.component.ts 

import { Component } from '@angular/core';
import { HeaderComponent } from "./header/header.component";
import { UserComponent } from './user/user.component';
import { DUMMY_USERS } from './dummy-users';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [HeaderComponent, UserComponent],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css',
})
export class AppComponent {
  users = DUMMY_USERS;
}

យើងយក users នឹងអោយវាទទួលតម្លៃពី DUMMY_USERS; ចឹងយើងអាចយក users នឹងទៅប្រើក្នុង app.component.htm បាន​ហើយ 

==> users[0] = select user DUMMY_USERS index [0]

3. Binding property [avatar]="users[0].avatar" 

យើងភ្ជាប់តម្លៃទៅហើយ avatar ពីក្នុង user.component ទៅនឹង app.component 

user.component
HTML: 

<div>
  <button (click)="onSelectUser()" >
    <img [src]="imagePath" [alt]="name" />
    <span>{{ name }}</span>
  </button>
</div>


TS: 

@Input() avatar!: string;
@Input() name!: string;

វាជាតម្លៃដែលបានមកពី ខាងក្រៅ it from app.component 

Note :  getter methods in classes (ទទួលតម្លៃមកពីណា)

 get imagePath(){
    return 'assets/users/' + this.avatar;
  } 

អាញាត្តិ imagePath វាទទួលតម្លៃពី ជារូបភាព 

















